{
  "src/components/GraphComponent.react.js": {
    "description": "GraphComponent renders a force-directed graph using \nreact-graph-vis by @crubier and vis.js",
    "displayName": "GraphComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "graph": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "A graph that will be displayed when this component is rendered"
      },
      "options": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Display options for the graph"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/components/Simple3DSceneComponent.react.js": {
    "description": "Simple3DSceneComponent is intended to draw simple 3D scenes using the popular\nThree.js scene graph library. In particular, the JSON representing the 3D scene\nis intended to be human-readable, and easily generated via Python. In future, a\nlong-term approach would be to develop a library to generate Three.js JSON directly\ninside Python to make this component redundant.",
    "displayName": "Simple3DSceneComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks"
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Simple3DScene JSON"
      },
      "settings": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Options used for generating scene"
      },
      "toggleVisibility": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Hide/show nodes in scene by name (key), value is 1 to show the node\nand 0 to hide it"
      },
      "nScreenshotRequests": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Increment to trigger a screenshot download."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/components/StructureViewerComponent.react.js": {
    "description": "StructureViewerComponent is ...\n...",
    "displayName": "StructureViewerComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "JSON describing the visualization of the crystal structure, generated\nby pymatgen's MaterialsProjectStructureVis class"
      },
      "value": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The pymatgen Structure, stored for convenience (not used internally by viewer)"
      },
      "generationOptions": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Options used for generating visualization, stored for convenience (not used internally by viewer)",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "visibilityOptions": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Whether or not to display atoms, bonds, etc.\n(This also includes specific polyhedra tags, might\n separate this into a separate prop later)"
      },
      "rotationSpeed": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Amount to rotate about y-axis per frame",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      },
      "n_screenshot_requests": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Increment to trigger a screenshot request",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "screenshot": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Screenshot as PNG data URI."
      }
    }
  }
}