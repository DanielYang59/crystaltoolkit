name: release

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: create tag
        env:
          DATE_FORMAT: "%Y.%m.%d"
        run: |
          NEXT_RELEASE=$(date "+${DATE_FORMAT}")
          LAST_RELEASE=$(git tag --sort=v:refname | grep "^20[^\-]*$" | tail -n 1)
          echo "Last release : ${LAST_RELEASE}"
          MAJOR_LAST_RELEASE=$(echo "${LAST_RELEASE}" | awk -v l=${#NEXT_RELEASE} '{ string=substr($0, 1, l); print string; }')
          echo "Last major release : ${MAJOR_LAST_RELEASE}"
          if [ "${MAJOR_LAST_RELEASE}" = "${NEXT_RELEASE}" ]; then
            MINOR_LAST_RELEASE="$(echo "${LAST_RELEASE}" | awk -v l=$((${#NEXT_RELEASE} + 2)) '{ string=substr($0, l); print string; }')"
            NEXT_RELEASE=${MAJOR_LAST_RELEASE}.$((MINOR_LAST_RELEASE + 1))
          fi
          echo "Next release: ${NEXT_RELEASE}"
          git tag ${NEXT_RELEASE}
          git push --tags

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: '**/pyproject.toml'

      - name: Install dependencies
        run: |
          python${{ matrix.python-version }} -m pip install --upgrade pip pip-tools build setuptools setuptools_scm wheel numpy
          python${{ matrix.python-version }} -m piptools sync --user requirements/ubuntu-latest_py${{ matrix.python-version }}_extras.txt
          python${{ matrix.python-version }} -m pip install --user --no-deps .[server]

      - name: Build package
        run: python${{ matrix.python-version }} -m build

      #- name: Publish package
      #  uses: pypa/gh-action-pypi-publish@release/v1.5
      #  with:
      #    user: __token__
      #    password: ${{ secrets.PYPI_API_TOKEN }}
